#!/bin/bash

RC="$HOME/.bashrc"

#################### UPDATE ENV START #######################
function update_env() {	
	EXISTS=$(grep -c 'PLAYGROUND ENV' $RC)
	if [[ $EXISTS -eq 0 ]]
	then 
		echo '#################### PLAYGROUND ENV ####################' | tee -a $RC
		echo '' | tee -a $RC
		echo '#################### PLAYGROUND END ####################' | tee -a $RC
	fi	
	
	ACTIVE=$(cat $HOME/.playground/.active)
	if [ "$ACTIVE" != "" ]
	then
		cp $RC.original $RC 2>/dev/null
	fi

	cp $RC $RC.original	2>/dev/null
	touch "$RC-plgrnd-env"
	HEAD=$(grep -n 'PLAYGROUND ENV' $RC | cut -d ':' -f 1)
	head -n $HEAD $RC | tee -a "$RC-plgrnd-env" 1>/dev/null
	cat $HOME/.playground/$(cat $HOME/.playground/.active)/.envstd  | tee -a "$RC-plgrnd-env" 1>/dev/null
	cat $HOME/.playground/$(cat $HOME/.playground/.active)/.env  | tee -a "$RC-plgrnd-env" 1>/dev/null
	TAIL=`expr $(grep -n 'PLAYGROUND END' $RC | cut -d ':' -f 1) - $(grep -n 'PLAYGROUND ENV' $RC | cut -d ':' -f 1)`
	tail -n $TAIL $RC | tee -a "$RC-plgrnd-env" 1>/dev/null
	mv "$RC-plgrnd-env" $RC 2>/dev/null
	bash
}

###################### UPDATE ENV END #######################

###################### EXIT PLAYGROUND ######################
function exit_playground() {
	cp "$RC.original" $RC 2>/dev/null
	bash	
}
######################### EXIT END ##########################

########################## HELP MENU ########################
function display_help() {
    cat <<EOF

Playground script usage:

    playground init [PLAYGROUND_NAME]  - create a new playground
    playground delete [PLAYGROUND_NAME] - delete a playground
    playground list                    - list all playgrounds
    playground export [VAR_NAME] [VAR_VALUE] - set an environment variable in the active playground
    playground unset [VAR_NAME]        - unset an environment variable in the active playground
    playground clear                   - clear all environment variables in the active playground
    playground exit                    - exit the active playground
    playground help                    - display this help menu

EOF
}
#############################################################

####################### MAIN START ##########################
if [[ $# -eq 0 ]]
then
	display_help
	exit 0
fi
	

if [ "$1" == "help" ]
then
    display_help
    exit 0
fi


if [ "$1" == "init" ]
then
		if [ "$2" !=  "" ]
		then
			if [ -x "$HOME/.playground/$2" ]
			then
				echo "" 1>/dev/null
			else	
				mkdir -p "$HOME/.playground/$2" 2>/dev/null
				echo "export PS1="'"\[\033[38;5;208m\](\[$(tput sgr0)\]\[\033[38;5;221m\]'"$2"'\[$(tput sgr0)\]\[\033[38;5;208m\]) \[$(tput sgr0)\]\[$(tput sgr0)\]"''$PS1' | tee -a  $HOME/.playground/$2/.envstd 1>/dev/null
				echo "cd $HOME/.playground/$2" | tee -a  $HOME/.playground/$2/.envstd 1>/dev/null
				echo "alias $2='""cd $HOME/.playground/$2'" |  tee -a  $HOME/.playground/$2/.envstd 1>/dev/null	
				touch $HOME/.playground/$2/.env 2>/dev/null
			fi
			echo $2 | tee $HOME/.playground/.active 1>/dev/null
			update_env
		else
			echo "[-] please specify a playgroung name"
		fi
elif [ "$1" == "list" ]
then
		ls -1 "$HOME/.playground" 2>/dev/null
elif [ "$(cat $HOME/.playground/.active)" != "" ]
then
	if [ "$1" == "export" ] || [ "$1" == "unset" ]
	then
		echo "export" "$2=""'""$3'" | tee -a  $HOME/.playground/$(cat $HOME/.playground/.active)/.env 2>/dev/null
		update_env
	elif [ "$1" == "clear" ]
	then
		echo "" | tee $HOME/.playground/$(cat $HOME/.playground/.active)/.env 2>/dev/null
		update_env
	elif [ "$1" == "exit" ]
	then
		echo "[+] exiting $(cat $HOME/.playground/.active) ..."
		echo "" | tee $HOME/.playground/.active 1>/dev/null
		exit_playground
	fi
fi

if [ "$1" == "delete" ]
then
	echo "[+] deleting playground $2 ..."
	rm -rf $HOME/.playground/$2 2>/dev/null
fi
########################## MAIN END #############################


